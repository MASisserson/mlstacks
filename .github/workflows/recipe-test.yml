name: Test recipes

on:
  pull_request:
    branches:
      - main
      - develop
  push:
    branches:
      - main
      - develop

permissions:
      id-token: write
      contents: read

jobs:
  aws_test:
    name: aws_test
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
      AWS_DEFAULT_REGION: eu-central-1

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.4

      - name: Loop through subdirectories
        run: |
          for dir in $(ls -d */ | grep -Fv -e "modules" -e ".github" | grep "aws*"); do
            (cd $dir && terraform init)
            (cd $dir && terraform fmt -check)
            (cd $dir && terraform validate)
            (cd $dir && terraform plan -input=false)
          done

  gcp_test:
    name: gcp_test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@master
      
      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.4

      - name: Loop through subdirectories
        run: |
          for dir in $(ls -d */ | grep -Fv -e "modules" -e ".github" | grep "gcp*"); do
            (cd $dir && terraform init)
            (cd $dir && terraform fmt -check)
            (cd $dir && terraform validate)
            (cd $dir && terraform plan -input=false)
          done

  azure_test:
    name: azure-test
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.4

      - name: Loop through subdirectories
        run: |
          for dir in $(ls -d */ | grep -Fv -e "modules" -e ".github" | grep "azure*"); do
            (cd $dir && terraform init)
            (cd $dir && terraform fmt -check)
            (cd $dir && terraform validate)
            (cd $dir && terraform plan -input=false)
          done

  k3d_test:
    name: k3d_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install k3d
        run: |
          curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | bash

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.4

      - name: Loop through subdirectories
        run: |
          for dir in $(ls -d */ | grep -Fv -e "modules" -e ".github" | grep "k3d*"); do
            (cd $dir && terraform init)
            (cd $dir && terraform fmt -check)
            (cd $dir && terraform validate)
            (cd $dir && terraform plan -input=false)
          done
